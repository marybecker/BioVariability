read.table('http://localhost:8080/csv/sids/14126,14127',header=TRUE,sep=',')
read.csv('http://localhost:8080/csv/sids/14126,14127',header=TRUE)
data<- read.csv('http://localhost:8080/csv/sids/14126,14127',header=TRUE)
data[1]
data[1:,]
data
data<- read.csv('http://localhost:8080/csv/sids/14126,14128',header=TRUE)
data
data<- read.csv('http://localhost:8080/csv/sids/',header=TRUE)
data<- read.csv('http://localhost:8080/csv/sids/14126,14128',header=TRUE)
data
data<- read.table('http://localhost:8080/StationsMap/sites',header=TRUE)
data<- read.table('http://localhost:8080/StationsMap/sites',header=TRUE,sep='\t')
data
data$STA_SEQ
data<- read.table('http://localhost:8080/StationsMap/sites',header=TRUE,sep='\t')
data
data<- read.table('http://localhost:8080/StationsMap/sites',header=TRUE,sep='\t')
data
data<- read.table('http://localhost:8080/StationsMap/sites',header=TRUE,sep='\t')
data
data<- read.table('http://localhost:8080/StationsMap/sites',header=TRUE,sep='\t')
data
data<- read.table('http://localhost:8080/StationsMap/sites',header=TRUE,sep='\t')
dim(data)
data<- read.table('http://localhost:8080/StationsMap/sites',header=TRUE,sep='\t')
dim(data)
data<- read.table('http://localhost:8080/StationsMap/sites',header=TRUE,sep='\t')
dim(data)
data
data<- read.table('http://localhost:8080/Stations',header=TRUE,sep='\t')
install.packages("~/Projects/Lakes/ContDataQC-2.0.5.zip", repos = NULL, type = "win.binary")
base<-'https://www.waterqualitydata.us/data/Activity/search?'
org<-'organization=CT_DEP01_WQX'
prj<-'project=BACT_BEACH'
char<- 'characteristicName=Enterococcus'
mime_type <-'mimeType=csv'
zip<-'zip=no'
data_profile<-'dataProfile=activityAll'
file<-paste(base,org,prj,char,mime_type,zip,data_profile,sep="&")
data<- read.csv(file,header=TRUE)
data[1:10,]
data$ActivityStartDate
unique(data$ActivityStartDate)
setwd('C:/Users/deepuser/Documents/Projects/ProgramDev/BioVariability/Taxa_Changes_Landscape_Chem')
# Load libraries
library(ggplot2)
CF_watershed <- read.csv('data/Statewide_CFPct_AllYears.csv',header=TRUE)
colnames(CF_watershed)<-c('HydroID','NextDown','SqMi','CFPct_1985','CFPct_1990','CFPct_1995',
'CFPct_2002','CFPct_2006','CFPct_2010','CFPct_2015')
CF_catchment <- read.csv('data/coreForestAllYears_catchments.csv',header=TRUE)
sites <- read.csv('data/BCG_Sites_1987_2019_HydroID.csv',header=TRUE)
BCG <- read.csv('data/BCG_Samples_1989_2019.csv',header=TRUE)
colnames(BCG)[1]<- 'STA_SEQ'
BCG <- BCG[,c(1,4,7)]
BCG <- merge(BCG,sites[,c(1,9)],by='STA_SEQ')
BCG$CFYear <- ifelse(BCG$SampleYear <1995,1990,
ifelse(BCG$SampleYear < 2000, 1995,
ifelse (BCG$SampleYear < 2005, 2002,
ifelse(BCG$SampleYear < 2010, 2006,
ifelse(BCG$SampleYear < 2015, 2010, 2015)))))
CFPct <- reshape(CF_watershed[,c(1,4:10)],direction="long",idvar="HydroID",
varying=2:ncol(CF_watershed[,c(1,4:10)]),sep="_")
colnames(CFPct)<-c("HydroID","CFYear","CFPct")
CFCatch <- reshape(CF_catchment[,c(1,5:11)],direction = "long", idvar="HydroID",
varying=2:ncol(CF_catchment[,c(1,5:11)]),sep="_")
colnames(CFCatch)<-c("HydroID","CFYear","CF")
BCG_CF <- merge(BCG,CFPct,by=c('HydroID','CFYear'))
BCG_CF <- merge(BCG_CF,CFCatch,by=c('HydroID','CFYear'))
quantile(BCG_CF[BCG_CF$NominalTier==2,BCG_CF$CFPct],0.5)
BCG_CF[1:10,]
BCG_CF[is.na(BCG_CF$CFPct),]
BCG_CF[BCG_CF$NominalTier==2,BCG_CF$CFPct]
BCG_CF[BCG_CF$NominalTier==2,]
BCG_CF[BCG_CF$NominalTier==2,"CFPct"]
median(BCG_CF[BCG_CF$NominalTier==2,"CFPct"])
median(BCG_CF[BCG_CF$NominalTier==3,"CFPct"])
median(BCG_CF[BCG_CF$NominalTier==4,"CFPct"])
median(BCG_CF[BCG_CF$NominalTier==5,"CFPct"])
median(BCG_CF[BCG_CF$NominalTier==6,"CFPct"])
BCG_CF[BCG_CF$NominalTier==6,"CFPct"]
median(BCG_CF[BCG_CF$NominalTier==2,"CF"])
median(BCG_CF[BCG_CF$NominalTier==3,"CF"])
median(BCG_CF[BCG_CF$NominalTier==2,"CF"])
median(BCG_CF[BCG_CF$NominalTier==4,"CF"])
median(BCG_CF[BCG_CF$NominalTier==5,"CF"])
bcg_high <- merge(BCG_CF[BCG_CF$CFPct<0.5 & BCG_CF$CF<0.5 &BCG_CF$NominalTier == 2,],sites[,c(1:3)],by='STA_SEQ')
bcg_high_sites <- unique(bcg_high[c('STA_SEQ','locationNa','locationDe')])
bcg_high_sites
setwd('C:/Users/deepuser/Documents/Projects/ProgramDev/BioVariability/Taxa_Changes_Landscape_Chem')
# Load libraries
library(ggplot2)
TP <- read.csv('data/TotalPhosphorus_MultiYearBCG2_Sites.csv',header=TRUE)
TP[1:10,]
colnames(TP)[1] <-'staSeq'
TP_agg <- aggregate(TP$TP,by=as.list(chem_parameter[,c('staSeq','Grp')]),FUN=mean)
TP_agg <- aggregate(TP$TP,by=as.list(TP[,c('staSeq','Grp')]),FUN=mean)
TP_agg[1:10,]
ggplot(TP_agg,aes(as.factor(Grp),TP,fill=as.factor(Grp)))+
geom_boxplot(colour='#cccccc')
ggplot(TP_agg,aes(as.factor(Grp),x,fill=as.factor(Grp)))+
geom_boxplot(colour='#cccccc')
ggplot(TP_agg,aes(as.factor(Grp),x,fill=as.factor(Grp)))+
geom_boxplot(colour='#cccccc')+
scale_y_log10()
quantile(TP_agg[TP_agg$Grp==1,],0.5)
TP_agg[TP_agg$Grp==1,]
quantile(TP_agg[TP_agg$Grp==1,TP_agg$x],0.5)
is.na(TP_agg[TP_agg$Grp==1,TP_agg$x])
(TP_agg[which(TP_agg$Grp==1),TP_agg$x])
TP_agg[which(TP_agg$Grp==1),TP_agg$x]
TP_agg[which(TP_agg$Grp==1),]
TP_agg[which(TP_agg$Grp==2),]
Grp1 <- TP_agg[TP_agg$Grp==1,]
Grp2 <- TP_agg[TP_agg$staSeq%in%Grp1$staSeq,]
dim(Grp1)
dim(Grp2)
aggregate(TP$Grp,by=as.list(TP[,c('staSeq')]),FUN=cnt)
aggregate(TP$Grp,by=as.list(TP[,c('staSeq')]),FUN=count)
aggregate(TP$Grp,by=as.list(TP[,c('staSeq')]),FUN=n)
aggregate(TP$Grp,by=as.list(TP[,c('staSeq')]),FUN=count)
aggregate(TP$TP,by=as.list(TP[,c('staSeq','Grp')]),FUN=length)
aggregate(TP$GrpP,by=as.list(TP[,c('staSeq')]),FUN=length)
aggregate(TP$Grp,by=as.list(TP[,c('staSeq')]),FUN=length)
TP_agg
aggregate(TP_agg$Grp,by=as.list(TP[,c('staSeq')]),FUN=length)
aggregate(TP_agg$staSeq,by=as.list(TP[,c('Grp')]),FUN=length)
aggregate(TP_agg$Grp,by=as.list(TP_agg[,c('staSeq')]),FUN=length)
setwd('C:/Users/deepuser/Documents/Projects/ProgramDev/BioVariability/Taxa_Changes_Landscape_Chem')
# Load libraries
library(ggplot2)
TP <- read.csv('data/TotalPhosphorus_MultiYearBCG2_Sites.csv',header=TRUE)
TP[1:10,]
colnames(TP)[1] <-'staSeq'
ggplot(TP_agg,aes(as.factor(Grp),x,fill=as.factor(Grp)))+
geom_boxplot(colour='#cccccc')+
scale_y_log10()
median(TP[TP$Grp==1,])
median(TP[TP$Grp==1,TP$Avg_TP])
TP[TP$Grp==1,TP$Avg_TP]
TP[TP$Grp==1,]
TP[TP$Grp==1,4]
median(TP[TP$Grp==1,4])
median(TP[TP$Grp==2,4])
TP[TP$Grp==1&TP$Avg_TP<=0.01,]
TP[TP$Grp==1&TP$Avg_TP<=0.01,4]
dim(TP[TP$Grp==1&TP$Avg_TP<=0.01,])
dim(TP[TP$Grp==1&TP$Avg_TP<=0.01,])[1]
dim(TP[TP$Grp==1])[1]
dim(TP[TP$Grp==1,])[1]
29/49
dim(TP[TP$Grp==2&TP$Avg_TP<=0.01,])[1]
dim(TP[TP$Grp==2,])[1]
14/49
dim(TP[TP$Grp==1,])[1])/dim(TP[TP$Grp==1,][1])
dim(TP[TP$Grp==1,][1])/dim(TP[TP$Grp==1,][1])
dim(TP[TP$Grp==1,][1])
dim(TP[TP$Grp==1,])[1]/dim(TP[TP$Grp==1,])[1]
dim(TP[TP$Grp==1,])[1]
dim(TP[TP$Grp==1,])[1]
dim(TP[TP$Grp==1&TP$Avg_TP<=0.01,])[1]/dim(TP[TP$Grp==1,])[1]
dim(TP[TP$Grp==2&TP$Avg_TP<=0.01,])[1]/dim(TP[TP$Grp==2,])[1]
TP_reshp <- reshape(TP, idvar='staSeq',timevar='Grp',direction='wide')
TP_reshp[1:10,]
colnames(TP_reshp)[1,2,3,5]
colnames(TP_reshp)[c(1,2,3,5)]
colnames(TP_reshp)[c(1,2,3,5)] <- c('staSeq','locationName','TP_2000s','TP_2010s')
TP_reshp <- TP_reshp[,c(1,2,3,5)]
TP_reshp$TPDiff <- TP_reshp$TP_2000s - TP_reshp$TP_2010s
TP_reshp[1:10,]
TP_reshp <- reshape(TP, idvar='staSeq',timevar='Grp',direction='wide')
colnames(TP_reshp)[c(1,2,3,5)] <- c('staSeq','locationName','TP_2000s','TP_2010s')
TP_diff <- TP_reshp[,c(1,2,3,5)]
TP_diff$TPDiff <- TP_diff$TP_2000s - TP_diff$TP_2010s
TP_diff[1:10,]
TPdiff[TPdiff$TPDiff<0,]
TP_diff[TP_diff$TPDiff<0,]
dim(TP_diff)[1]
dim(TP_diff[TP_diff$TPDiff<0,])[1]/dim(TP_diff)[1]
mean(dim(TP_diff[TP_diff$TPDiff<0,]))
TP_diff[TP_diff$TPDiff<0,5]
mean(TP_diff[TP_diff$TPDiff<0,5])
TP_diff[TP_diff$TPDiff<=0.01,5]
TP_diff[TP_diff$TPDiff<=-0.01,5]
TP_diff[TP_diff$TPDiff<=-0.005,5]
TP_diff
dim(TP[TP$Grp==1&TP$Avg_TP<=0.01,])[1]/dim(TP[TP$Grp==1,])[1]
dim(TP[TP$Grp==2&TP$Avg_TP<=0.01,])[1]/dim(TP[TP$Grp==2,])[1]
as.dataframe(LowTPPct =dim(TP[TP$Grp==1&TP$Avg_TP<=0.01,])[1]/dim(TP[TP$Grp==1,])[1],
YearGrp = '2000s')
as.data.frame(LowTPPct =dim(TP[TP$Grp==1&TP$Avg_TP<=0.01,])[1]/dim(TP[TP$Grp==1,])[1],
YearGrp = '2000s')
as.data.frame('LowTPPct' =dim(TP[TP$Grp==1&TP$Avg_TP<=0.01,])[1]/dim(TP[TP$Grp==1,])[1],
'YearGrp' = '2000s')
dim(TP[TP$Grp==1&TP$Avg_TP<=0.01,])[1]/dim(TP[TP$Grp==1,])[1]
LowTP_Grp1$Pct <- dim(TP[TP$Grp==1&TP$Avg_TP<=0.01,])[1]/dim(TP[TP$Grp==1,])[1]
data.frame(Pct = dim(TP[TP$Grp==1&TP$Avg_TP<=0.01,])[1]/dim(TP[TP$Grp==1,])[1],
YrGrp = '2000s')
LowTP_Grp1 <- data.frame(Pct = dim(TP[TP$Grp==1&TP$Avg_TP<=0.01,])[1]/dim(TP[TP$Grp==1,])[1],
YrGrp = '2000s')
LowTP_Grp2<- data.frame(Pct = dim(TP[TP$Grp==2&TP$Avg_TP<=0.01,])[1]/dim(TP[TP$Grp==2,])[1],
YrGrp = '2010s')
LowTP <- rbind(LowTP_Grp1,LowTP_Grp2)
LowTP
ggplot(LowTP,aes(as.factor(YrGrp),Pct)+
geom_col()
ggplot(LowTP,aes(as.factor(YrGrp),Pct))+
geom_col()
ggplot(LowTP,aes(as.factor(YrGrp),Pct))+
geom_col()+
ylim(0,1)
ggplot(LowTP,aes(as.factor(YrGrp),Pct*100))+
geom_col()+
ylim(0,1)
ggplot(LowTP,aes(as.factor(YrGrp),Pct))+
geom_col()+
ylim(0,1)
ggplot(LowTP,aes(as.factor(YrGrp),Pct*100))+
geom_col()+
ylim(0,1)
ggplot(LowTP,aes(as.factor(YrGrp),Pct*100))+
geom_col()+
ylim(0,100)
ggplot(LowTP,aes(as.factor(YrGrp),Pct*100))+
geom_col()+
ylim(0,100)+
theme(panel.background = element_rect(fill = "white", colour = "grey"))
ggplot(LowTP,aes(as.factor(YrGrp),Pct*100))+
geom_col()+
ylim(0,100)+
theme(axis.title.x=element_blank(),
panel.background = element_rect(fill = "white", colour = "grey"))
ggplot(LowTP,aes(as.factor(YrGrp),Pct*100))+
geom_col()+
ylim(0,100)+
labs(y='Percent of Sites <= 0.01 mg/L Total Phosphorus')
theme(axis.title.x=element_blank(),
panel.background = element_rect(fill = "white", colour = "grey"))
ggplot(LowTP,aes(as.factor(YrGrp),Pct*100))+
geom_col()+
ylim(0,100)+
labs(y='Percent of Sites <= 0.01 mg/L Total Phosphorus')+
theme(axis.title.x=element_blank(),
panel.background = element_rect(fill = "white", colour = "grey"))
ggplot(LowTP,aes(as.factor(YrGrp),Pct*100))+
geom_col()+
labs(y='Percent of Sites <= 0.01 mg/L Total Phosphorus')+
theme(axis.title.x=element_blank(),
panel.background = element_rect(fill = "white", colour = "grey"))
ggplot(LowTP,aes(as.factor(YrGrp),Pct*100))+
geom_col(fill="#74c476",alpha=c(0.6,0.9))+
labs(y='Percent of Sites <= 0.01 mg/L Total Phosphorus')+
theme(axis.title.x=element_blank(),
panel.background = element_rect(fill = "white", colour = "grey"))
LowTPPct<- ggplot(LowTP,aes(as.factor(YrGrp),Pct*100))+
geom_col(fill="#74c476",alpha=c(0.6,0.9))+
labs(y='Percent of Sites <= 0.01 mg/L Total Phosphorus')+
theme(axis.title.x=element_blank(),
panel.background = element_rect(fill = "white", colour = "grey"))
ggsave(plot=LowTPPct,'plots/lowTPPct.png',width=5,height=5,units="in")
TP_diff[1:10,]
wfpath <- 'C:/Users/deepuser/Documents/Projects/GISPrjs/2020/CWA_Pres/data/'
write.csv(TP_diff,paste0(wfpath,'TPDiff.csv'),row.names = FALSE)
median(TP_diff$TP_2000s)
median(TP_diff$TP_2010s)
LowTP
TP[TP$staSeq==15531,]
